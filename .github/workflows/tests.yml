name: brew test-bot

on:
  push:
    branches:
      - main
    paths:
      - '**.rb'
  pull_request:
    paths:
      - '**.rb'

env:
  HOMEBREW_DEVELOPER: 1
  HOMEBREW_NO_ANALYTICS: 1

defaults:
  run:
    shell: bash -xeuo pipefail {0}

concurrency:
  group: cache-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  test-bot:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-26, macos-15, macos-15-intel, macos-14 ]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    permissions:
      actions: read
      checks: read
      contents: read
      packages: read
      pull-requests: read
    steps:
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup runner
        run: brew test-bot --only-cleanup-before

      - name: Get cache key
        id: cache-key
        run: |
          cache_key_prefix="${RUNNER_OS}"
          if [ "${RUNNER_OS}" = macOS ]
          then
            macos_version="$(sw_vers -productVersion)"
            cache_key_prefix="macos${macos_version%%.*}-$(uname -m)"
          elif [ "${RUNNER_OS}" = Linux ]
          then
            cache_key_prefix="linux-$(uname -m)"
          fi
          echo "prefix=${cache_key_prefix}" >> "${GITHUB_OUTPUT}"

      - name: Cache Homebrew Bundler RubyGems
        id: cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.set-up-homebrew.outputs.gems-path }}
          key: ${{ steps.cache-key.outputs.prefix }}-rubygems-${{ steps.set-up-homebrew.outputs.gems-hash }}
          restore-keys: ${{ steps.cache-key.outputs.prefix }}-rubygems-

      - name: Install Homebrew Bundler RubyGems
        if: steps.cache.outputs.cache-hit != 'true'
        run: brew install-bundler-gems

      - name: Setup Homebrew test environment
        run: brew test-bot --only-setup

      - name: Install FUSE-T
        if: matrix.os != 'ubuntu-latest'
        run: |
          brew install --cask fuse-t
          /bin/bash -c /Users/runner/work/homebrew-scoop/homebrew-scoop/cmd/fuse-t-links-add > /dev/null

      - run: brew test-bot --only-tap-syntax
      - name: Base64-encode GITHUB_TOKEN for HOMEBREW_DOCKER_REGISTRY_TOKEN
        id: base64-encode
        if: github.event_name == 'pull_request'
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          base64_token=$(echo -n "${TOKEN}" | base64 | tr -d "\n")
          echo "::add-mask::${base64_token}"
          echo "token=${base64_token}" >> "${GITHUB_OUTPUT}"
      - run: |
          if [[ "${RUNNER_OS}" = macOS && "$(uname -m)" = x86_64 ]]
          then
            export HOMEBREW_NO_INSTALL_FROM_API=1
            cp /Users/runner/work/homebrew-scoop/homebrew-scoop/.github/files/tb_formulae "$(brew --prefix)/Homebrew/Library/Homebrew/test_bot/formulae.rb"
            brew test-bot --verbose --only-formulae --root-url=https://ghcr.io/v2/slickag/scoop
          else
            brew test-bot --only-formulae --root-url=https://ghcr.io/v2/slickag/scoop
          fi
        name: Build bottle
        id: build-bottle
        env:
          HOMEBREW_DOCKER_REGISTRY_TOKEN: ${{ steps.base64-encode.outputs.token }}

      # - name: Setup upterm session for debugging
        # id: debug-workflow-run
        # # uses: actions/checkout@v2
        # # NOTE: ipatch, seems to be issue with macos runners circa oct 2024
        # # uses: lhotari/action-upterm@v1
        # #-------
        # uses: owenthereal/action-upterm@main
        # if: failure() && matrix.os == 'macos-15-intel'
        # with:
          # # Restrict to the user who triggered the workflow
          # limit-access-to-actor: true
          # # Specific authorized users only
          # limit-access-to-users: slickag
          # ## Shut down the server if unconnected after 5 minutes.
          # wait-timeout-minutes: 5

      - name: Upload bottles as artifact
        if: always() && github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: bottles_${{ steps.cache-key.outputs.prefix }}
          path: '*.bottle.*'
